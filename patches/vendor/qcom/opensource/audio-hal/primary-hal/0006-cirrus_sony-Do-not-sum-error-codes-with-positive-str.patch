From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Marijn Suijten <marijns95@gmail.com>
Date: Thu, 11 Feb 2021 23:02:40 +0100
Subject: [PATCH] cirrus_sony: Do not sum error codes with positive
 string-length

cirrus_format_mixer_name returns the number of formatted characters
(result of snprintf). Returning this positive number is not always a
good idea, like when check_error_state returns 22 as the length of a
mixer control, which is caught by the `==0` check resulting in a full
reset.
Secondly, a postive length of 22 together with an actual, expected
failure of -EINVAL which conveniently is -22 results in 0; no error at
all!!

Signed-off-by: Marijn Suijten <marijns95@gmail.com>
---
 hal/audio_extn/cirrus_sony.c | 44 ++++++++++++++++++++++++++++++++++++
 1 file changed, 44 insertions(+)

diff --git a/hal/audio_extn/cirrus_sony.c b/hal/audio_extn/cirrus_sony.c
index 1904eac03f6c1e7f1457a529eab67dce7fc1a2e1..e8f4db0341ad3a39be881c2cc3ae4f1db94d79f0 100644
--- a/hal/audio_extn/cirrus_sony.c
+++ b/hal/audio_extn/cirrus_sony.c
@@ -467,6 +467,8 @@ static int cirrus_set_mixer_value_by_name_lr(char* ctl_base_name, int value) {
     ctl_name = (char *)calloc(ctl_sz, sizeof(char));
 
     ret = cirrus_format_mixer_name(ctl_base_name, "L", &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_set_mixer_value_by_name(ctl_name, 1);
     if (ret < 0) {
         ALOGE("%s: Cannot set mixer %s to %d", __func__, ctl_name, value);
@@ -474,6 +476,8 @@ static int cirrus_set_mixer_value_by_name_lr(char* ctl_base_name, int value) {
     }
 
     ret = cirrus_format_mixer_name(ctl_base_name, "R", &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_set_mixer_value_by_name(ctl_name, 1);
     if (ret < 0)
         ALOGE("%s: Cannot set mixer %s to %d", __func__, ctl_name, value);
@@ -734,6 +738,8 @@ static int cirrus_do_reset(const char *channel) {
 
     ctl_name = (char *)calloc(ctl_sz, sizeof(char));
     ret = cirrus_format_mixer_name("CCM Reset", channel, &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_get_mixer_value_by_name(ctl_name);
     if (ret < 0) {
         ALOGE("%s: CCM Reset is missing!!!", __func__);
@@ -763,6 +769,8 @@ static int cirrus_exec_fw_download(const char *fw_type, const char *channel,
 
     /* If this one is missing, we're not using our Cirrus codec... */
     ret = cirrus_format_mixer_name("DSP Booted", channel, &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_get_mixer_value_by_name(ctl_name);
     if (ret < 0) {
         ALOGE("%s: %s control is missing. Bailing out.", __func__, ctl_name);
@@ -781,6 +789,8 @@ static int cirrus_exec_fw_download(const char *fw_type, const char *channel,
 
     ret = cirrus_format_mixer_name("DSP1 Preload Switch",
                                    channel, &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_set_mixer_value_by_name(ctl_name, 0);
     if (ret < 0) {
         ALOGE("%s: Cannot reset %s", __func__, ctl_name);
@@ -790,6 +800,8 @@ static int cirrus_exec_fw_download(const char *fw_type, const char *channel,
 
     /* Determine what firmware to load and configure DSP */
     ret = cirrus_format_mixer_name("DSP1 Firmware", channel, &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_set_mixer_enum_by_name(ctl_name, fw_type);
     if (ret < 0) {
         ALOGE("%s: Cannot set %s to %s", __func__, ctl_name, fw_type);
@@ -797,6 +809,8 @@ static int cirrus_exec_fw_download(const char *fw_type, const char *channel,
     }
 
     ret = cirrus_format_mixer_name("PCM Source", channel, &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_set_mixer_enum_by_name(ctl_name, "DSP");
     if (ret < 0) {
         ALOGE("%s: Cannot set %s to DSP", __func__, ctl_name);
@@ -806,6 +820,8 @@ static int cirrus_exec_fw_download(const char *fw_type, const char *channel,
     /* Send the firmware! */
     ret = cirrus_format_mixer_name("DSP1 Preload Switch",
                                    channel, &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_set_mixer_value_by_name(ctl_name, 1);
     if (ret < 0) {
         ALOGE("%s: Cannot set %s to %s", __func__, ctl_name, fw_type);
@@ -1025,6 +1041,8 @@ static int cirrus_stereo_calibration(void) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_CALI_CAL_STATUS, "L",
                                    &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_get_mixer_array_by_name(ctl_name,
                                           &handle.spkl.status, 4);
     if (ret < 0) {
@@ -1034,6 +1052,8 @@ static int cirrus_stereo_calibration(void) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_CALI_CAL_STATUS, "R",
                                    &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_get_mixer_array_by_name(ctl_name,
                                           &handle.spkr.status, 4);
     if (ret < 0) {
@@ -1067,6 +1087,8 @@ static int cirrus_stereo_calibration(void) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_CALI_CAL_CHECKSUM, "L",
                                    &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_get_mixer_array_by_name(ctl_name,
                                          &handle.spkl.checksum, 4);
     if (ret < 0) {
@@ -1076,6 +1098,8 @@ static int cirrus_stereo_calibration(void) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_CALI_CAL_CHECKSUM, "R",
                                    &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_get_mixer_array_by_name(ctl_name,
                                          &handle.spkr.checksum, 4);
     if (ret < 0) {
@@ -1085,6 +1109,8 @@ static int cirrus_stereo_calibration(void) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_CALI_CAL_R, "L",
                                    &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_get_mixer_array_by_name(ctl_name,
                                          &handle.spkl.cal_r, 4);
     if (ret < 0) {
@@ -1094,6 +1120,8 @@ static int cirrus_stereo_calibration(void) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_CALI_CAL_R, "R",
                                    &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_get_mixer_array_by_name(ctl_name,
                                          &handle.spkr.cal_r, 4);
     if (ret < 0) {
@@ -1201,6 +1229,8 @@ static int cirrus_do_fw_stereo_download(int do_reset) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_PROT_CAL_R, "L",
                                     &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_set_mixer_array_by_name(ctl_name,
                                          &handle.spkl.cal_r, 4);
     if (ret < 0) {
@@ -1210,6 +1240,8 @@ static int cirrus_do_fw_stereo_download(int do_reset) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_PROT_CAL_R, "R",
                                     &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_set_mixer_array_by_name(ctl_name,
                                          &handle.spkr.cal_r, 4);
     if (ret < 0) {
@@ -1219,6 +1251,8 @@ static int cirrus_do_fw_stereo_download(int do_reset) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_PROT_CAL_STATUS, "L",
                                     &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_set_mixer_array_by_name(ctl_name,
                                          &handle.spkl.status, 4);
     if (ret < 0) {
@@ -1228,6 +1262,8 @@ static int cirrus_do_fw_stereo_download(int do_reset) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_PROT_CAL_STATUS, "R",
                                     &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_set_mixer_array_by_name(ctl_name,
                                          &handle.spkr.status, 4);
     if (ret < 0) {
@@ -1237,6 +1273,8 @@ static int cirrus_do_fw_stereo_download(int do_reset) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_PROT_CAL_CHECKSUM, "L",
                                     &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_set_mixer_array_by_name(ctl_name,
                                          &handle.spkl.checksum, 4);
     if (ret < 0) {
@@ -1246,6 +1284,8 @@ static int cirrus_do_fw_stereo_download(int do_reset) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_PROT_CAL_CHECKSUM, "R",
                                     &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_set_mixer_array_by_name(ctl_name,
                                          &handle.spkr.checksum, 4);
     if (ret < 0) {
@@ -1362,6 +1402,8 @@ static int cirrus_check_error_state_stereo(void) {
     ctl_name = (char *)calloc(ctl_sz, sizeof(char));
     ret = cirrus_format_mixer_name(CIRRUS_CTL_PROT_CSPL_ERRORNO, "L",
                                    &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_get_mixer_array_by_name(ctl_name, &cspl_error, 4);
     if (ret < 0) {
         ALOGE("%s: Cannot get %s", __func__, ctl_name);
@@ -1376,6 +1418,8 @@ static int cirrus_check_error_state_stereo(void) {
 
     ret = cirrus_format_mixer_name(CIRRUS_CTL_PROT_CSPL_ERRORNO, "R",
                                    &ctl_name, ctl_sz);
+    if (ret < 0)
+        return ret;
     ret += cirrus_get_mixer_array_by_name(ctl_name, &cspl_error, 4);
     if (ret < 0) {
         ALOGE("%s: Cannot get %s", __func__, ctl_name);
